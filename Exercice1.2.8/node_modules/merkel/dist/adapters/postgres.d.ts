import * as pg from 'pg';
import { DbAdapter } from '../adapter';
import { Task } from '../migration';
export declare class PostgresAdapter extends DbAdapter {
    private client;
    private lib;
    /**
     * @param url The connection url
     * @param lib The pg library
     */
    constructor(url: string, lib: typeof pg);
    /**
     * Connects to the database and sets up the schema if required
     */
    init(): Promise<void>;
    close(): Promise<void>;
    /**
     * Gets the last migration task that was executed
     */
    getLastMigrationTask(): Promise<Task | null>;
    /**
     * Logs a task to the database. Sets the task ID
     */
    beginMigrationTask(task: Task): Promise<void>;
    /**
     * Marks the task as finished
     */
    finishMigrationTask(task: Task): Promise<void>;
    /**
     * Checks that the same task cannot be executed two times in a row and the first task cannot be
     * a down task
     */
    checkIfTaskCanExecute(task: Task): Promise<void>;
    protected hasPendingMigration(): Promise<boolean>;
}
